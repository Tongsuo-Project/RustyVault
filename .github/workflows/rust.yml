name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  unix-default-test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{matrix.os}}
    services:
      etcd:
        image: quay.io/coreos/etcd:v3.5.0
        options: >-
          --entrypoint etcd
          --publish 2379:2379
          --publish 2380:2380

    steps:
    - uses: actions/checkout@v3
    - name: Setup protoc
      run: |
        if [ ${{ runner.os }} = 'ubuntu-latest' ]; then
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
        elif [ ${{ runner.os }} = 'macos-latest' ]; then
          brew install protobuf
        fi
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  unix-mysql-test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
    - uses: shogo82148/actions-setup-mysql@v1
      with:
        mysql-version: "5.7"
        root-password: "password"
        my-cnf: |
          skip-ssl
          port=3306
    - name: install diesel_cli
      run: cargo install diesel_cli --no-default-features --features mysql
    - name: init database
      run: diesel setup --database-url mysql://root:password@127.0.0.1:3306/vault
    - name: Build
      run: cargo build --features storage_mysql --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Build crate doc
      run: cargo doc --no-deps


  windows-default-test:
    strategy:
      matrix:
        os:
          - windows-latest
    runs-on: ${{matrix.os}}
    services:
      etcd:
        image: quay.io/coreos/etcd:v3.5.0
        options: >-
          --entrypoint etcd
          --publish 2379:2379
          --publish 2380:2380

    steps:
    - uses: actions/checkout@v3
    - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
    - name: Setup protoc
      run: vcpkg install protobuf protobuf:x64-windows
    - name: install openssl
      run: vcpkg install openssl:x64-windows-static-md
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  windows-mysql-test:
    strategy:
      matrix:
        os:
          - windows-latest
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
    - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
    - name: install openssl
      run: vcpkg install openssl:x64-windows-static-md
    - name: Download MySQL Connector/C
      run: |
        Invoke-WebRequest -Uri "https://dev.mysql.com/get/Downloads/Connector-C/mysql-connector-c-6.1.11-winx64.msi" -OutFile "mysql-connector.msi"
    - name: Install MySQL Connector/C
      run: |
        Start-Process msiexec.exe -ArgumentList '/i', 'mysql-connector.msi', '/quiet', '/norestart' -NoNewWindow -Wait
    - name: Set MySQLCLIENT_LIB_DIR
      run: echo "MYSQLCLIENT_LIB_DIR=C:\Program Files\MySQL\MySQL Connector C 6.1\lib\vs14" | Out-File -FilePath $env:GITHUB_ENV -Append
    - uses: shogo82148/actions-setup-mysql@v1
      with:
        mysql-version: "5.7"
        root-password: "password"
        my-cnf: |
          skip-ssl
          port=3306
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: install diesel_cli
      run: cargo install diesel_cli --no-default-features --features mysql
    - name: init database
      run: diesel setup --database-url mysql://root:password@127.0.0.1:3306/vault
    - name: Build
      run: cargo build --features storage_mysql --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Build crate doc
      run: cargo doc --no-deps
